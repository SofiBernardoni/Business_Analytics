cosa abbiamo messo in state:
- clock
- list_events (future)
- queue (={}) lista di entity   cell array di cell array(queue) lungo come numcode
- lengthQueue                   vettore lungo come numCode
- lost_client (booleano, da rimettere a false)
- lastLenghtUpdate (clock all'ultimo update ) (sumlenght) (vettore lungo come numCode
- servers : [A, B, C, D] mettiamo 0 e 1 se il server è libero o occutpato
- occ_server= lista di entity(???)
- waitingPump = vettore da due a=1, c=2 true se non posso uscire perché sono bloccati 
- processedClients vettore lungo quanto le code che dice quanti ne ha processati 




config
- stopNumber
- numQueue
- balking(booleano) True per max lunghezza
- maxLenght (_queue )
- minBalking (intero)
- minPref (intero, incluso)
- maxPref (intero, incluso)
- preference (booleano)
- arrivalrate
- numServer
- serviceRate
- indipendetServiceQueue vettori di veri o falsi
- indipendetArrivalQueue
- iIndipendentExitQueue



evento:
- clock
- typo
- server (cosa che cè solo nel caso di end service) 
- queue
- client: PERICOLOOOOOOOOOOOOOOOOooooOOOOOoOooOooOoooooOOOOOO
   - timeQueueArrival vettore con gli ingressi in ogni coda (prendiamo il minimo del primo vettore: non serve prchè lo facciamo per ongi cosa)
   - preferenza
   - pompa
   - WaitingQueueTime (da inizializzare a zero)
